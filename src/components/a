tengo el siguiente header pero no me hace la animacion como quiero, que me recomiendas usar? quiero tener buena optimizacion y algo simplificado y limpio,---
const currentPath = Astro.url.pathname;

const navItems = [
    { href: '/', text: 'Inicio' },
    { href: '/servicios', text: 'Servicios' },
    { href: '/proyectos', text: 'Proyectos' },
    { href: '/sobre-nosotros', text: 'Sobre nosotros' },
    { href: '/contactanos', text: 'Cont√°ctanos' },
];

function isActive(href: string) {
    if (href === '/') {
        return currentPath === href;
    }
    return currentPath.startsWith(href);
}
---

<header class="mb-[4rem]">
    <nav class="fixed inset-x-0 top-0 bg-white/80 border-gray-200 w-full backdrop-blur-md shadow-md z-20 start-0 border-b dark:bg-gray-900 dark:border-gray-600">
        <div class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4">
            <a href="/" class="flex items-center space-x-3 rtl:space-x-reverse">
                <img src="/logo-fexsi.webp" class="size-8" alt="Fexsi Logo">
                <span class="self-center text-2xl font-semibold whitespace-nowrap dark:text-white">Fexsi</span>
            </a>
            <div class="flex md:order-2 space-x-3 md:space-x-0 rtl:space-x-reverse">
                <button id="menu-toggle" data-collapse-toggle="navbar-sticky" type="button" class="active:scale-110 ease-in-out inline-flex items-center p-2 size-10 justify-center text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600" aria-controls="navbar-sticky" aria-expanded="false">
                    <span class="sr-only">Open main menu</span>
                    <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 17 14">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 1h15M1 7h15M1 13h15"/>
                    </svg>
                </button>
            </div>
            <div class="mobile-menu items-center justify-between h-0 w-full md:flex md:w-auto md:order-1 duration-500" id="navbar-sticky">
                <ul class="mobile-menu flex flex-col h-0 p-4 md:p-0 duration-500 mt-4 font-medium border border-gray-100 rounded-lg bg-gray-50 md:space-x-8 rtl:space-x-reverse md:flex-row md:mt-0 md:border-0 md:bg-white dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700">
                    {navItems.map(item => (
                        <li>
                            <a
                                href={item.href}
                                class:list={[
                                    "block py-2 px-3 rounded md:p-0",
                                    isActive(item.href)
                                        ? "text-white bg-zinc-900 md:bg-transparent md:text-blue-700 md:dark:text-blue-500"
                                        : "text-gray-900 hover:bg-gray-100 md:hover:bg-transparent md:hover:text-blue-700 md:dark:hover:text-blue-500 dark:text-white dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent"
                                ]}
                                aria-current={isActive(item.href) ? "page" : undefined}
                            >
                                {item.text}
                            </a>
                        </li>
                    ))}
                </ul>
            </div>
        </div>
    </nav>
</header>

<script>
    function setupMobileMenu() {
        const menuToggle = document.getElementById('menu-toggle');
        const mobileMenu = document.querySelector('.mobile-menu');

        if (menuToggle && mobileMenu) {
            menuToggle.addEventListener('click', () => {
                mobileMenu.classList.toggle('h-[15.5rem]');
                const expanded = menuToggle.getAttribute('aria-expanded') === 'true' || false;
                menuToggle.setAttribute('aria-expanded', (!expanded).toString());
            });
        }
    }

    // Setup on initial load
    setupMobileMenu();

    // Setup after Astro page transitions
    document.addEventListener('astro:after-swap', setupMobileMenu);
</script>